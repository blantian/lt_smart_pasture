package com.lantian.lib_base.database.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.lantian.lib_base.entity.module.response.farmer.plan.CaoyuanList;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CAOYUAN_LIST".
*/
public class CaoyuanListDao extends AbstractDao<CaoyuanList, String> {

    public static final String TABLENAME = "CAOYUAN_LIST";

    /**
     * Properties of entity CaoyuanList.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property Status = new Property(1, int.class, "status", false, "STATUS");
        public final static Property User_id = new Property(2, String.class, "user_id", false, "USER_ID");
        public final static Property Hukou_id = new Property(3, String.class, "hukou_id", false, "HUKOU_ID");
        public final static Property Area = new Property(4, String.class, "area", false, "AREA");
        public final static Property Area_type = new Property(5, String.class, "area_type", false, "AREA_TYPE");
        public final static Property Name = new Property(6, String.class, "name", false, "NAME");
        public final static Property Addtime = new Property(7, String.class, "addtime", false, "ADDTIME");
        public final static Property Shenhe = new Property(8, String.class, "shenhe", false, "SHENHE");
        public final static Property Ste_type = new Property(9, String.class, "ste_type", false, "STE_TYPE");
        public final static Property Farmid = new Property(10, String.class, "farmid", false, "FARMID");
        public final static Property Ali_type = new Property(11, String.class, "ali_type", false, "ALI_TYPE");
    }


    public CaoyuanListDao(DaoConfig config) {
        super(config);
    }
    
    public CaoyuanListDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CAOYUAN_LIST\" (" + //
                "\"ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "\"STATUS\" INTEGER NOT NULL ," + // 1: status
                "\"USER_ID\" TEXT," + // 2: user_id
                "\"HUKOU_ID\" TEXT," + // 3: hukou_id
                "\"AREA\" TEXT," + // 4: area
                "\"AREA_TYPE\" TEXT," + // 5: area_type
                "\"NAME\" TEXT," + // 6: name
                "\"ADDTIME\" TEXT," + // 7: addtime
                "\"SHENHE\" TEXT," + // 8: shenhe
                "\"STE_TYPE\" TEXT," + // 9: ste_type
                "\"FARMID\" TEXT," + // 10: farmid
                "\"ALI_TYPE\" TEXT);"); // 11: ali_type
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CAOYUAN_LIST\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, CaoyuanList entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
        stmt.bindLong(2, entity.getStatus());
 
        String user_id = entity.getUser_id();
        if (user_id != null) {
            stmt.bindString(3, user_id);
        }
 
        String hukou_id = entity.getHukou_id();
        if (hukou_id != null) {
            stmt.bindString(4, hukou_id);
        }
 
        String area = entity.getArea();
        if (area != null) {
            stmt.bindString(5, area);
        }
 
        String area_type = entity.getArea_type();
        if (area_type != null) {
            stmt.bindString(6, area_type);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        String addtime = entity.getAddtime();
        if (addtime != null) {
            stmt.bindString(8, addtime);
        }
 
        String shenhe = entity.getShenhe();
        if (shenhe != null) {
            stmt.bindString(9, shenhe);
        }
 
        String ste_type = entity.getSte_type();
        if (ste_type != null) {
            stmt.bindString(10, ste_type);
        }
 
        String farmid = entity.getFarmid();
        if (farmid != null) {
            stmt.bindString(11, farmid);
        }
 
        String ali_type = entity.getAli_type();
        if (ali_type != null) {
            stmt.bindString(12, ali_type);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, CaoyuanList entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
        stmt.bindLong(2, entity.getStatus());
 
        String user_id = entity.getUser_id();
        if (user_id != null) {
            stmt.bindString(3, user_id);
        }
 
        String hukou_id = entity.getHukou_id();
        if (hukou_id != null) {
            stmt.bindString(4, hukou_id);
        }
 
        String area = entity.getArea();
        if (area != null) {
            stmt.bindString(5, area);
        }
 
        String area_type = entity.getArea_type();
        if (area_type != null) {
            stmt.bindString(6, area_type);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        String addtime = entity.getAddtime();
        if (addtime != null) {
            stmt.bindString(8, addtime);
        }
 
        String shenhe = entity.getShenhe();
        if (shenhe != null) {
            stmt.bindString(9, shenhe);
        }
 
        String ste_type = entity.getSte_type();
        if (ste_type != null) {
            stmt.bindString(10, ste_type);
        }
 
        String farmid = entity.getFarmid();
        if (farmid != null) {
            stmt.bindString(11, farmid);
        }
 
        String ali_type = entity.getAli_type();
        if (ali_type != null) {
            stmt.bindString(12, ali_type);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public CaoyuanList readEntity(Cursor cursor, int offset) {
        CaoyuanList entity = new CaoyuanList( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.getInt(offset + 1), // status
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // user_id
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // hukou_id
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // area
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // area_type
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // name
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // addtime
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // shenhe
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // ste_type
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // farmid
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11) // ali_type
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, CaoyuanList entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setStatus(cursor.getInt(offset + 1));
        entity.setUser_id(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setHukou_id(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setArea(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setArea_type(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setAddtime(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setShenhe(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setSte_type(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setFarmid(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setAli_type(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
     }
    
    @Override
    protected final String updateKeyAfterInsert(CaoyuanList entity, long rowId) {
        return entity.getId();
    }
    
    @Override
    public String getKey(CaoyuanList entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(CaoyuanList entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
