package com.lantian.lib_base.database.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.lantian.lib_base.entity.module.response.farmer.farmlist.FarmListResponse;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "FARM_LIST_RESPONSE".
*/
public class FarmListResponseDao extends AbstractDao<FarmListResponse, String> {

    public static final String TABLENAME = "FARM_LIST_RESPONSE";

    /**
     * Properties of entity FarmListResponse.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property DBuser_id = new Property(0, String.class, "DBuser_id", false, "DBUSER_ID");
        public final static Property State = new Property(1, int.class, "state", false, "STATE");
        public final static Property User_id = new Property(2, String.class, "user_id", true, "USER_ID");
        public final static Property Username = new Property(3, String.class, "username", false, "USERNAME");
        public final static Property Password = new Property(4, String.class, "password", false, "PASSWORD");
        public final static Property Phone = new Property(5, String.class, "phone", false, "PHONE");
        public final static Property Email = new Property(6, String.class, "email", false, "EMAIL");
        public final static Property Nickname = new Property(7, String.class, "nickname", false, "NICKNAME");
        public final static Property Sex = new Property(8, String.class, "sex", false, "SEX");
        public final static Property Address = new Property(9, String.class, "address", false, "ADDRESS");
        public final static Property Id_card = new Property(10, String.class, "id_card", false, "ID_CARD");
        public final static Property Age = new Property(11, String.class, "age", false, "AGE");
        public final static Property Avatar = new Property(12, String.class, "avatar", false, "AVATAR");
        public final static Property Open_id = new Property(13, String.class, "open_id", false, "OPEN_ID");
        public final static Property User_api_key = new Property(14, String.class, "user_api_key", false, "USER_API_KEY");
        public final static Property Company_api_key = new Property(15, String.class, "company_api_key", false, "COMPANY_API_KEY");
        public final static Property Fial_time = new Property(16, String.class, "fial_time", false, "FIAL_TIME");
        public final static Property Is_admin = new Property(17, String.class, "is_admin", false, "IS_ADMIN");
        public final static Property Register_code = new Property(18, String.class, "register_code", false, "REGISTER_CODE");
        public final static Property Flag_code = new Property(19, String.class, "flag_code", false, "FLAG_CODE");
        public final static Property Last_code = new Property(20, String.class, "last_code", false, "LAST_CODE");
        public final static Property Smx_username = new Property(21, String.class, "smx_username", false, "SMX_USERNAME");
        public final static Property Smx_password = new Property(22, String.class, "smx_password", false, "SMX_PASSWORD");
        public final static Property Iot_username = new Property(23, String.class, "iot_username", false, "IOT_USERNAME");
        public final static Property Iot_password = new Property(24, String.class, "iot_password", false, "IOT_PASSWORD");
        public final static Property Appkey = new Property(25, String.class, "appkey", false, "APPKEY");
        public final static Property Appsecret = new Property(26, String.class, "appsecret", false, "APPSECRET");
        public final static Property Login_ip = new Property(27, String.class, "login_ip", false, "LOGIN_IP");
        public final static Property Created_at = new Property(28, String.class, "created_at", false, "CREATED_AT");
        public final static Property Updated_at = new Property(29, String.class, "updated_at", false, "UPDATED_AT");
        public final static Property Deleted_at = new Property(30, String.class, "deleted_at", false, "DELETED_AT");
        public final static Property Xian = new Property(31, String.class, "xian", false, "XIAN");
        public final static Property Shi = new Property(32, String.class, "shi", false, "SHI");
        public final static Property Sheng = new Property(33, String.class, "sheng", false, "SHENG");
        public final static Property Address_id = new Property(34, String.class, "address_id", false, "ADDRESS_ID");
        public final static Property Smx_id = new Property(35, String.class, "smx_id", false, "SMX_ID");
        public final static Property Smx_type = new Property(36, String.class, "smx_type", false, "SMX_TYPE");
        public final static Property Smx_ticket = new Property(37, String.class, "smx_ticket", false, "SMX_TICKET");
        public final static Property Usertype_id = new Property(38, String.class, "usertype_id", false, "USERTYPE_ID");
        public final static Property Lng = new Property(39, String.class, "lng", false, "LNG");
        public final static Property Lat = new Property(40, String.class, "lat", false, "LAT");
        public final static Property Updated_time = new Property(41, String.class, "updated_time", false, "UPDATED_TIME");
        public final static Property Staff_id = new Property(42, String.class, "staff_id", false, "STAFF_ID");
        public final static Property Name = new Property(43, String.class, "name", false, "NAME");
        public final static Property Addtime = new Property(44, String.class, "addtime", false, "ADDTIME");
        public final static Property Status = new Property(45, String.class, "status", false, "STATUS");
        public final static Property Syte_id = new Property(46, String.class, "syte_id", false, "SYTE_ID");
    }


    public FarmListResponseDao(DaoConfig config) {
        super(config);
    }
    
    public FarmListResponseDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"FARM_LIST_RESPONSE\" (" + //
                "\"DBUSER_ID\" TEXT," + // 0: DBuser_id
                "\"STATE\" INTEGER NOT NULL ," + // 1: state
                "\"USER_ID\" TEXT PRIMARY KEY NOT NULL ," + // 2: user_id
                "\"USERNAME\" TEXT," + // 3: username
                "\"PASSWORD\" TEXT," + // 4: password
                "\"PHONE\" TEXT," + // 5: phone
                "\"EMAIL\" TEXT," + // 6: email
                "\"NICKNAME\" TEXT," + // 7: nickname
                "\"SEX\" TEXT," + // 8: sex
                "\"ADDRESS\" TEXT," + // 9: address
                "\"ID_CARD\" TEXT," + // 10: id_card
                "\"AGE\" TEXT," + // 11: age
                "\"AVATAR\" TEXT," + // 12: avatar
                "\"OPEN_ID\" TEXT," + // 13: open_id
                "\"USER_API_KEY\" TEXT," + // 14: user_api_key
                "\"COMPANY_API_KEY\" TEXT," + // 15: company_api_key
                "\"FIAL_TIME\" TEXT," + // 16: fial_time
                "\"IS_ADMIN\" TEXT," + // 17: is_admin
                "\"REGISTER_CODE\" TEXT," + // 18: register_code
                "\"FLAG_CODE\" TEXT," + // 19: flag_code
                "\"LAST_CODE\" TEXT," + // 20: last_code
                "\"SMX_USERNAME\" TEXT," + // 21: smx_username
                "\"SMX_PASSWORD\" TEXT," + // 22: smx_password
                "\"IOT_USERNAME\" TEXT," + // 23: iot_username
                "\"IOT_PASSWORD\" TEXT," + // 24: iot_password
                "\"APPKEY\" TEXT," + // 25: appkey
                "\"APPSECRET\" TEXT," + // 26: appsecret
                "\"LOGIN_IP\" TEXT," + // 27: login_ip
                "\"CREATED_AT\" TEXT," + // 28: created_at
                "\"UPDATED_AT\" TEXT," + // 29: updated_at
                "\"DELETED_AT\" TEXT," + // 30: deleted_at
                "\"XIAN\" TEXT," + // 31: xian
                "\"SHI\" TEXT," + // 32: shi
                "\"SHENG\" TEXT," + // 33: sheng
                "\"ADDRESS_ID\" TEXT," + // 34: address_id
                "\"SMX_ID\" TEXT," + // 35: smx_id
                "\"SMX_TYPE\" TEXT," + // 36: smx_type
                "\"SMX_TICKET\" TEXT," + // 37: smx_ticket
                "\"USERTYPE_ID\" TEXT," + // 38: usertype_id
                "\"LNG\" TEXT," + // 39: lng
                "\"LAT\" TEXT," + // 40: lat
                "\"UPDATED_TIME\" TEXT," + // 41: updated_time
                "\"STAFF_ID\" TEXT," + // 42: staff_id
                "\"NAME\" TEXT," + // 43: name
                "\"ADDTIME\" TEXT," + // 44: addtime
                "\"STATUS\" TEXT," + // 45: status
                "\"SYTE_ID\" TEXT);"); // 46: syte_id
        // Add Indexes
        db.execSQL("CREATE INDEX " + constraint + "IDX_FARM_LIST_RESPONSE_USER_ID_DESC_STATE_DESC_DBUSER_ID ON \"FARM_LIST_RESPONSE\"" +
                " (\"USER_ID\" DESC,\"STATE\" DESC,\"DBUSER_ID\" ASC);");
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"FARM_LIST_RESPONSE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, FarmListResponse entity) {
        stmt.clearBindings();
 
        String DBuser_id = entity.getDBuser_id();
        if (DBuser_id != null) {
            stmt.bindString(1, DBuser_id);
        }
        stmt.bindLong(2, entity.getState());
 
        String user_id = entity.getUser_id();
        if (user_id != null) {
            stmt.bindString(3, user_id);
        }
 
        String username = entity.getUsername();
        if (username != null) {
            stmt.bindString(4, username);
        }
 
        String password = entity.getPassword();
        if (password != null) {
            stmt.bindString(5, password);
        }
 
        String phone = entity.getPhone();
        if (phone != null) {
            stmt.bindString(6, phone);
        }
 
        String email = entity.getEmail();
        if (email != null) {
            stmt.bindString(7, email);
        }
 
        String nickname = entity.getNickname();
        if (nickname != null) {
            stmt.bindString(8, nickname);
        }
 
        String sex = entity.getSex();
        if (sex != null) {
            stmt.bindString(9, sex);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(10, address);
        }
 
        String id_card = entity.getId_card();
        if (id_card != null) {
            stmt.bindString(11, id_card);
        }
 
        String age = entity.getAge();
        if (age != null) {
            stmt.bindString(12, age);
        }
 
        String avatar = entity.getAvatar();
        if (avatar != null) {
            stmt.bindString(13, avatar);
        }
 
        String open_id = entity.getOpen_id();
        if (open_id != null) {
            stmt.bindString(14, open_id);
        }
 
        String user_api_key = entity.getUser_api_key();
        if (user_api_key != null) {
            stmt.bindString(15, user_api_key);
        }
 
        String company_api_key = entity.getCompany_api_key();
        if (company_api_key != null) {
            stmt.bindString(16, company_api_key);
        }
 
        String fial_time = entity.getFial_time();
        if (fial_time != null) {
            stmt.bindString(17, fial_time);
        }
 
        String is_admin = entity.getIs_admin();
        if (is_admin != null) {
            stmt.bindString(18, is_admin);
        }
 
        String register_code = entity.getRegister_code();
        if (register_code != null) {
            stmt.bindString(19, register_code);
        }
 
        String flag_code = entity.getFlag_code();
        if (flag_code != null) {
            stmt.bindString(20, flag_code);
        }
 
        String last_code = entity.getLast_code();
        if (last_code != null) {
            stmt.bindString(21, last_code);
        }
 
        String smx_username = entity.getSmx_username();
        if (smx_username != null) {
            stmt.bindString(22, smx_username);
        }
 
        String smx_password = entity.getSmx_password();
        if (smx_password != null) {
            stmt.bindString(23, smx_password);
        }
 
        String iot_username = entity.getIot_username();
        if (iot_username != null) {
            stmt.bindString(24, iot_username);
        }
 
        String iot_password = entity.getIot_password();
        if (iot_password != null) {
            stmt.bindString(25, iot_password);
        }
 
        String appkey = entity.getAppkey();
        if (appkey != null) {
            stmt.bindString(26, appkey);
        }
 
        String appsecret = entity.getAppsecret();
        if (appsecret != null) {
            stmt.bindString(27, appsecret);
        }
 
        String login_ip = entity.getLogin_ip();
        if (login_ip != null) {
            stmt.bindString(28, login_ip);
        }
 
        String created_at = entity.getCreated_at();
        if (created_at != null) {
            stmt.bindString(29, created_at);
        }
 
        String updated_at = entity.getUpdated_at();
        if (updated_at != null) {
            stmt.bindString(30, updated_at);
        }
 
        String deleted_at = entity.getDeleted_at();
        if (deleted_at != null) {
            stmt.bindString(31, deleted_at);
        }
 
        String xian = entity.getXian();
        if (xian != null) {
            stmt.bindString(32, xian);
        }
 
        String shi = entity.getShi();
        if (shi != null) {
            stmt.bindString(33, shi);
        }
 
        String sheng = entity.getSheng();
        if (sheng != null) {
            stmt.bindString(34, sheng);
        }
 
        String address_id = entity.getAddress_id();
        if (address_id != null) {
            stmt.bindString(35, address_id);
        }
 
        String smx_id = entity.getSmx_id();
        if (smx_id != null) {
            stmt.bindString(36, smx_id);
        }
 
        String smx_type = entity.getSmx_type();
        if (smx_type != null) {
            stmt.bindString(37, smx_type);
        }
 
        String smx_ticket = entity.getSmx_ticket();
        if (smx_ticket != null) {
            stmt.bindString(38, smx_ticket);
        }
 
        String usertype_id = entity.getUsertype_id();
        if (usertype_id != null) {
            stmt.bindString(39, usertype_id);
        }
 
        String lng = entity.getLng();
        if (lng != null) {
            stmt.bindString(40, lng);
        }
 
        String lat = entity.getLat();
        if (lat != null) {
            stmt.bindString(41, lat);
        }
 
        String updated_time = entity.getUpdated_time();
        if (updated_time != null) {
            stmt.bindString(42, updated_time);
        }
 
        String staff_id = entity.getStaff_id();
        if (staff_id != null) {
            stmt.bindString(43, staff_id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(44, name);
        }
 
        String addtime = entity.getAddtime();
        if (addtime != null) {
            stmt.bindString(45, addtime);
        }
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(46, status);
        }
 
        String syte_id = entity.getSyte_id();
        if (syte_id != null) {
            stmt.bindString(47, syte_id);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, FarmListResponse entity) {
        stmt.clearBindings();
 
        String DBuser_id = entity.getDBuser_id();
        if (DBuser_id != null) {
            stmt.bindString(1, DBuser_id);
        }
        stmt.bindLong(2, entity.getState());
 
        String user_id = entity.getUser_id();
        if (user_id != null) {
            stmt.bindString(3, user_id);
        }
 
        String username = entity.getUsername();
        if (username != null) {
            stmt.bindString(4, username);
        }
 
        String password = entity.getPassword();
        if (password != null) {
            stmt.bindString(5, password);
        }
 
        String phone = entity.getPhone();
        if (phone != null) {
            stmt.bindString(6, phone);
        }
 
        String email = entity.getEmail();
        if (email != null) {
            stmt.bindString(7, email);
        }
 
        String nickname = entity.getNickname();
        if (nickname != null) {
            stmt.bindString(8, nickname);
        }
 
        String sex = entity.getSex();
        if (sex != null) {
            stmt.bindString(9, sex);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(10, address);
        }
 
        String id_card = entity.getId_card();
        if (id_card != null) {
            stmt.bindString(11, id_card);
        }
 
        String age = entity.getAge();
        if (age != null) {
            stmt.bindString(12, age);
        }
 
        String avatar = entity.getAvatar();
        if (avatar != null) {
            stmt.bindString(13, avatar);
        }
 
        String open_id = entity.getOpen_id();
        if (open_id != null) {
            stmt.bindString(14, open_id);
        }
 
        String user_api_key = entity.getUser_api_key();
        if (user_api_key != null) {
            stmt.bindString(15, user_api_key);
        }
 
        String company_api_key = entity.getCompany_api_key();
        if (company_api_key != null) {
            stmt.bindString(16, company_api_key);
        }
 
        String fial_time = entity.getFial_time();
        if (fial_time != null) {
            stmt.bindString(17, fial_time);
        }
 
        String is_admin = entity.getIs_admin();
        if (is_admin != null) {
            stmt.bindString(18, is_admin);
        }
 
        String register_code = entity.getRegister_code();
        if (register_code != null) {
            stmt.bindString(19, register_code);
        }
 
        String flag_code = entity.getFlag_code();
        if (flag_code != null) {
            stmt.bindString(20, flag_code);
        }
 
        String last_code = entity.getLast_code();
        if (last_code != null) {
            stmt.bindString(21, last_code);
        }
 
        String smx_username = entity.getSmx_username();
        if (smx_username != null) {
            stmt.bindString(22, smx_username);
        }
 
        String smx_password = entity.getSmx_password();
        if (smx_password != null) {
            stmt.bindString(23, smx_password);
        }
 
        String iot_username = entity.getIot_username();
        if (iot_username != null) {
            stmt.bindString(24, iot_username);
        }
 
        String iot_password = entity.getIot_password();
        if (iot_password != null) {
            stmt.bindString(25, iot_password);
        }
 
        String appkey = entity.getAppkey();
        if (appkey != null) {
            stmt.bindString(26, appkey);
        }
 
        String appsecret = entity.getAppsecret();
        if (appsecret != null) {
            stmt.bindString(27, appsecret);
        }
 
        String login_ip = entity.getLogin_ip();
        if (login_ip != null) {
            stmt.bindString(28, login_ip);
        }
 
        String created_at = entity.getCreated_at();
        if (created_at != null) {
            stmt.bindString(29, created_at);
        }
 
        String updated_at = entity.getUpdated_at();
        if (updated_at != null) {
            stmt.bindString(30, updated_at);
        }
 
        String deleted_at = entity.getDeleted_at();
        if (deleted_at != null) {
            stmt.bindString(31, deleted_at);
        }
 
        String xian = entity.getXian();
        if (xian != null) {
            stmt.bindString(32, xian);
        }
 
        String shi = entity.getShi();
        if (shi != null) {
            stmt.bindString(33, shi);
        }
 
        String sheng = entity.getSheng();
        if (sheng != null) {
            stmt.bindString(34, sheng);
        }
 
        String address_id = entity.getAddress_id();
        if (address_id != null) {
            stmt.bindString(35, address_id);
        }
 
        String smx_id = entity.getSmx_id();
        if (smx_id != null) {
            stmt.bindString(36, smx_id);
        }
 
        String smx_type = entity.getSmx_type();
        if (smx_type != null) {
            stmt.bindString(37, smx_type);
        }
 
        String smx_ticket = entity.getSmx_ticket();
        if (smx_ticket != null) {
            stmt.bindString(38, smx_ticket);
        }
 
        String usertype_id = entity.getUsertype_id();
        if (usertype_id != null) {
            stmt.bindString(39, usertype_id);
        }
 
        String lng = entity.getLng();
        if (lng != null) {
            stmt.bindString(40, lng);
        }
 
        String lat = entity.getLat();
        if (lat != null) {
            stmt.bindString(41, lat);
        }
 
        String updated_time = entity.getUpdated_time();
        if (updated_time != null) {
            stmt.bindString(42, updated_time);
        }
 
        String staff_id = entity.getStaff_id();
        if (staff_id != null) {
            stmt.bindString(43, staff_id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(44, name);
        }
 
        String addtime = entity.getAddtime();
        if (addtime != null) {
            stmt.bindString(45, addtime);
        }
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(46, status);
        }
 
        String syte_id = entity.getSyte_id();
        if (syte_id != null) {
            stmt.bindString(47, syte_id);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2);
    }    

    @Override
    public FarmListResponse readEntity(Cursor cursor, int offset) {
        FarmListResponse entity = new FarmListResponse( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // DBuser_id
            cursor.getInt(offset + 1), // state
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // user_id
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // username
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // password
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // phone
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // email
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // nickname
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // sex
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // address
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // id_card
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // age
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // avatar
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // open_id
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // user_api_key
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // company_api_key
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // fial_time
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // is_admin
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // register_code
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // flag_code
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // last_code
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // smx_username
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // smx_password
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // iot_username
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // iot_password
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // appkey
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // appsecret
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // login_ip
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // created_at
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // updated_at
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // deleted_at
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // xian
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // shi
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // sheng
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // address_id
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // smx_id
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // smx_type
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // smx_ticket
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // usertype_id
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // lng
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // lat
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // updated_time
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // staff_id
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // name
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // addtime
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // status
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46) // syte_id
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, FarmListResponse entity, int offset) {
        entity.setDBuser_id(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setState(cursor.getInt(offset + 1));
        entity.setUser_id(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setUsername(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPassword(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPhone(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setEmail(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setNickname(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSex(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setAddress(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setId_card(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setAge(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setAvatar(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setOpen_id(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setUser_api_key(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setCompany_api_key(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setFial_time(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setIs_admin(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setRegister_code(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setFlag_code(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setLast_code(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setSmx_username(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setSmx_password(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setIot_username(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setIot_password(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setAppkey(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setAppsecret(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setLogin_ip(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setCreated_at(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setUpdated_at(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setDeleted_at(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setXian(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setShi(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setSheng(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setAddress_id(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setSmx_id(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setSmx_type(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setSmx_ticket(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setUsertype_id(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setLng(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setLat(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setUpdated_time(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setStaff_id(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setName(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setAddtime(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setStatus(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setSyte_id(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
     }
    
    @Override
    protected final String updateKeyAfterInsert(FarmListResponse entity, long rowId) {
        return entity.getUser_id();
    }
    
    @Override
    public String getKey(FarmListResponse entity) {
        if(entity != null) {
            return entity.getUser_id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(FarmListResponse entity) {
        return entity.getUser_id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
